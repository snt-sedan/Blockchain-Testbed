#!/usr/bin/ruby -w
require 'cute'
g5k = Cute::G5K::API.new()
job1 = g5k.reserve(:nodes => 1, :site => 'luxembourg', :walltime => '00:30:00', :wait => true, :type => :deploy)
Luxnodes = job1["assigned_nodes"]
job2 = g5k.reserve(:nodes => 1, :site => 'nancy', :walltime => '00:30:00', :wait => true, :type => :deploy)
Nancynodes = job2["assigned_nodes"]
job3 = g5k.reserve(:nodes => 1, :site => 'lille', :walltime => '00:30:00', :wait => true, :type => :deploy)
Lillenodes = job3["assigned_nodes"]

nodes= Luxnodes+Nancynodes+Lillenodes
puts "# Nodes are reserved"
puts nodes

# Save Nodes names
File.open("nodes.txt", "w+") do |f|
  f.puts(nodes)
end

g5k.logger = Logger.new(File.new('experiment_1.log'))

g5k.deploy(job1, :env => 'ubuntu1404-x64-min', :wait => true)
puts "LUXMBOURG NODES READY :)"
g5k.deploy(job2, :env => 'ubuntu1404-x64-min', :wait => true)
puts "Nancy NODES READY :)"
g5k.deploy(job3, :env => 'ubuntu1404-x64-min', :wait => true)
puts "LILLE NODES READY :)"
output = File.open( "static-nodes.json","w" )
nodeslink=[]
puts "Running commands"
 
ssh = Net::SSH::Multi::Session::new
nodes.each { |n| ssh.use "root@#{n}" }
 ssh.exec!("sudo apt-get update")
 ssh.exec!("sudo apt-get install -y git")
 ssh.exec!("git clone https://github.com/snt-sedan/Blockchain-Testbed.git") #Download needed software
 ssh.exec!("chmod u+x Blockchain-Testbed/Blockchain/ethereum/*.sh") #make the script executable
 ssh.exec!("Blockchain-Testbed/Blockchain/ethereum/install.sh")
 ssh.exec!("Blockchain-Testbed/Blockchain/ethereum/init.sh")#creat a user and run Gensis command

puts " Generate static nodes Address"
# We needd to get the address of the static node
output = File.open( "static-nodes.json","w" )
nodeslink=[]
for @hostname in nodes
 @username = "root"
 @password = ""
 @cmd = "Blockchain-Testbed/Blockchain/ethereum/GenerateStaticNode.sh"
 begin
    ssh = Net::SSH.start(@hostname, @username, :password => @password)
    res = ssh.exec!(@cmd)
    nodeslink.push(res)
    ssh.close
  rescue
    puts "Unable to connect to #{@hostname} using #{@username}/#{@password}"
 end
end
output<<'['+nodeslink.join(',')+']'
output.close
puts "Experiment preparation finished."

